# Workflow para deploy no Firebase Hosting
name: Deploy to Firebase Hosting on merge

'on':
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Instalar depend√™ncias (for√ßando resolu√ß√£o de conflitos)
      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # 3. Construir o projeto
      - name: Build project
        run: npm run build

      # 4. Deploy para o Firebase Hosting
      - name: Deploy to Firebase Hosting
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHECKIN_ACADEMIAS }}'
          channelId: live
          projectId: checkin-academias

      # 5. Notifica√ß√£o de sucesso ou erro
      - name: Notify deploy status
        run: |
          # Obter informa√ß√µes do commit
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=%an)
          
          # Nome do projeto (pode ser fixo ou din√¢mico)
          PROJECT_NAME="Checkin Academias"

          # Define a mensagem baseada no status do deploy
          if [ "${{ steps.deploy.outcome }}" == "success" ]; then
            MESSAGE="‚úÖ Deploy realizado com sucesso no projeto ${PROJECT_NAME} üöÄ\n\n Informa√ß√µes do commit:\n- Autor: ${COMMIT_AUTHOR}\n- Mensagem: ${COMMIT_MESSAGE}"
          else
            MESSAGE="‚ùå Ocorreu um erro no deploy para o projeto '${PROJECT_NAME}'.\n\nüö® √öltima altera√ß√£o:\n- Autor: ${COMMIT_AUTHOR}\n- Mensagem: ${COMMIT_MESSAGE}"
          fi
          
          # Envia a mensagem para o endpoint de mensageria
          curl -X POST 'https://backend-messenger-pmz3utw4ra-uc.a.run.app?server_id=1189175667502370857&channel_id=1311374552613257258' \
          -H "Content-Type: application/json" \
          -d "{\"message\": \"$MESSAGE\"}"
        env:
          GIT_COMMIT_MESSAGE: ${{ steps.checkout.outputs.commit_message }}
